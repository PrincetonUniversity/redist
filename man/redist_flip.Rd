% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redist_flip_tidy.R
\name{redist_flip}
\alias{redist_flip}
\title{'Flip' Markov Chain Monte Carlo Redistricting Simulation}
\usage{
redist_flip(
  map,
  nsims,
  init_plan,
  pop_tol,
  counties = NULL,
  group_pop,
  constraints = list(),
  nthin = 1,
  eprob = 0.05,
  lambda = 0,
  temper = FALSE,
  betaseq = "powerlaw",
  betaseqlength = 10,
  betaweights = NULL,
  adapt_lambda = FALSE,
  adapt_eprob = FALSE,
  exact_mh = FALSE,
  adjswaps = TRUE,
  init_name = NULL,
  verbose = TRUE
)
}
\arguments{
\item{map}{A \code{\link{redist_map}} object.}

\item{nsims}{The number of samples to draw.}

\item{init_plan}{A vector containing the congressional district labels
of each geographic unit. The default is \code{NULL}. If not provided,
a random initial plan will be generated using \code{redist.smc}.}

\item{pop_tol}{The strength of the hard population
constraint. \code{pop_tol} = 0.05 means that any proposed swap that
brings a district more than 5\% away from population parity will be
rejected. The default is \code{get_pop_tol(map)}.}

\item{counties}{A column in map containing county membership}

\item{group_pop}{A column in map containing group populations}

\item{constraints}{a list of constraints to implement. Can be created with
\code{flip_constraints_helper}}

\item{nthin}{The amount by which to thin the Markov Chain. The
default is \code{1}.}

\item{eprob}{The probability of keeping an edge connected. The
default is \code{0.05}.}

\item{lambda}{lambda The parameter determining the number of swaps to attempt
each iteration of the algorihtm. The number of swaps each iteration is
equal to Pois(\code{lambda}) + 1. The default is \code{0}.}

\item{temper}{Whether to use simulated tempering algorithm. Default is FALSE.}

\item{betaseq}{Sequence of beta values for tempering. The default is
\code{powerlaw} (see Fifield et. al (2020) for details).}

\item{betaseqlength}{@param betaseqlength Length of beta sequence desired for
tempering. The default is \code{10}.}

\item{betaweights}{betaweights Sequence of weights for different values of
beta. Allows the user to upweight certain values of beta over
others. The default is \code{NULL} (equal weighting).}

\item{adapt_lambda}{adapt_lambda Whether to adaptively tune the lambda parameter so that the Metropolis-Hastings
acceptance probability falls between 20\% and 40\%. Default is FALSE.}

\item{adapt_eprob}{eprob Whether to adaptively tune the edgecut probability parameter so that the
Metropolis-Hastings acceptance probability falls between 20\% and 40\%. Default is
FALSE.}

\item{exact_mh}{Whether to use the approximate (FALSE) or exact (TRUE)
Metropolis-Hastings ratio calculation for accept-reject rule. Default is FALSE.}

\item{adjswaps}{Flag to restrict swaps of beta so that only
values adjacent to current constraint are proposed. The default is
\code{TRUE}.}

\item{init_name}{a name for the initial plan, or \code{FALSE} to not include
the initial plan in the output.  Defaults to the column name of the
existing plan, or "\code{<init>}" if the initial plan is sampled.}

\item{verbose}{Whether to print initialization statement. Default is \code{TRUE}.}
}
\value{
A \code{\link{redist_plans}} object containing the simulated plans.
}
\description{
\code{redist_flip} provides an improved interface to the methods in
\code{\link{redist.mcmc}}.
}
\details{
This function allows users to simulate redistricting plans
using the Markov Chain Monte Carlo methods of Fifield et al. Several
constraints corresponding to substantive requirements in the redistricting
process are implemented, including population parity and geographic
compactness. In addition, the function includes multiple-swap and simulated
tempering functionality to improve the mixing of the Markov Chain.
}
\examples{
\dontrun{
data(iowa)
iowa_map <- redist_map(iowa, ndists = 4, existing_plan = cd_2010, total_pop = 'pop')
sims <- redist_flip(map = iowa_map, nsims = 100)
}
}
\references{
Fifield, Benjamin, Michael Higgins, Kosuke Imai and Alexander
Tarr. (2016) "A New Automated Redistricting Simulator Using Markov Chain Monte
Carlo." Working Paper. Available at
\url{http://imai.princeton.edu/research/files/redist.pdf}.
}
\concept{simulate}
