% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enumpart.R
\name{redist.enumpart}
\alias{redist.enumpart}
\title{Enumerate All Parititions}
\usage{
redist.enumpart(
  adjlist,
  unordered_path,
  ordered_path,
  out_path,
  ndist = 2,
  all = TRUE,
  n = NULL,
  init = FALSE,
  weight_path = NULL,
  lower = NULL,
  upper = NULL,
  read = TRUE,
  population = NULL
)
}
\arguments{
\item{adjlist}{zero indexed adjacency list}

\item{unordered_path}{valid path to output the unordered adjacency map to}

\item{ordered_path}{valid path to output the ordered adjacency map to}

\item{out_path}{Valid path to output the enumerated districts}

\item{ndist}{number of districts to enumerate}

\item{all}{boolean. TRUE outputs all districts. FALSE samples n districts.}

\item{n}{integer. Number of districts to output if all is FALSE. Returns
districts selected from uniform random distribution.}

\item{init}{Runs redist.init.enumpart. Defaults to false. Should be run on first use.}

\item{weight_path}{A path (not including ".dat") to a space-delimited file containing a vector of
vertex weights, to be used along with \code{lower} and \code{upper}.}

\item{lower}{A lower bound on each partition's total weight, implemented by rejection sampling.}

\item{upper}{An upper bound on each partition's total weight.}

\item{read}{boolean. Defaults to TRUE. reads}

\item{population}{Integer Vector. Defaults to NULL. If supplied, computes the parity.}
}
\value{
List with entries district_membership and parity.
}
\description{
Single function for standard enumeration analysis.
}
\concept{simulate}
